# -*- coding: utf-8 -*-
"""LVADSUSR105_IAE2C.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xwp-yTUuEI3AlBpa2WYJwYt06UO3w51g
"""

import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection  import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score , precision_score, recall_score, f1_score, confusion_matrix
import matplotlib.pyplot as plt
import seaborn as sns

#1
data = pd.read_csv("/content/drive/MyDrive/winequality-red.csv")
df = pd.DataFrame(data)

nullcount=df.isnull().sum()

# print(nullcount)

ndf  = df.ffill()
nc = ndf.isnull().sum()
print(nc)

q1  =ndf.quantile(0.25)
q3  =ndf.quantile(0.75)
iqr  = q3-q1
outlier  = ((ndf<(q1-iqr*1.5)) | (ndf>(q3+iqr*1.5))).any(axis=1)
fdf = ndf[~outlier]

plt.figure(figsize=(10,7))
sns.boxplot(fdf)
plt.show()

#2
for val in fdf["quality"]:
  if ((fdf["quality"] >=3) and (fdf["quality"] <=6)):
    fdf["quality"] = 0
  elif ((fdf["quality"] >=7) and (fdf["quality"] <=8)):
    fdf["quality"] = 1

#3
print("all features are numerical so no encoding needed")

#4
sns.pairplot(fdf)
fdf.duplicated().sum()
fdf.drop_duplicates()

#5
x = fdf.drop(["quality"],axis=1)
y = fdf["quality"]

x_train,x_test,y_train,y_test  = train_test_split(x,y,test_size=0.3,random_state=42)

#6
model = RandomForestClassifier()
model.fit(x_train,y_train)
op = model.predict(x_test)
acc = accuracy_score(op,y_test)
print(acc)

#7
accuracyscore = accuracy_score(op,y_test)
precisionscore = precision_score(op,y_test)
recallscore = recall_score(op,y_test)
f1score  = f1_score(op,y_test)
confusionmatrix  = confusion_matrix(op,y_test)

print(accuracyscore)
print(precisionscore)
print(recallscore)
print(f1score)
print(confusionmatrix)

plt.scatter(op,y_test)